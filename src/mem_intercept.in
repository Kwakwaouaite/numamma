#!/bin/bash

prefix=@CMAKE_INSTALL_PREFIX@
NUMAP_LIBDIR=@NUMAP_DIR@

usage()
{
cat << EOF
usage: $0 options

OPTIONS:
   -?                               Show this message
   -d                               Run mem_intercept with gdb
   -o                               Dump all the collected memory information to a file
   -b 				    Create "block" files
   -v                               Verbose mode
EOF
}

debug=n
dump=n
verbose=n
create_blocks=n

while getopts 'dvob' OPTION; do
  case $OPTION in
  d)
	debug=y
       	;;
  o)
	dump=y
       	;;
  b)
	create_blocks=y
       	;;
  v)
	verbose=y
       	;;
  ?)	usage
	exit 2
	;;
  esac
done

# remove the options from the command line
shift $(($OPTIND - 1))

prog_name=$1
shift

ld_preload=$LD_PRELOAD:$prefix/lib/libnumamma.so
ld_library_path=$LD_LIBRARY_PATH:$NUMAP_LIBDIR

if [ x$debug = xy ]; then

    #  generate a gdbinit file that will preload all the modules
    gdbinit_file=`mktemp`
    echo "set env LD_PRELOAD=$ld_preload" > $gdbinit_file

    if [ x$verbose = xy ]; then
	echo "set env NUMAMMA_VERBOSE=1" >> $gdbinit_file
    fi
    if [ x$dump = xy ]; then
	echo "set env NUMAMMA_DUMP=1" >> $gdbinit_file
    fi
    echo "set env LD_LIBRARY_PATH=$ld_library_path" >> $gdbinit_file
    echo "echo \n" >> $gdbinit_file
    echo "echo NumaMMa: hook loaded\n" >> $gdbinit_file

    gdb -x $gdbinit_file  --args $prog_name $*
    rm  $gdbinit_file
else
    if [ x$verbose = xy ]; then
	export NUMAMMA_VERBOSE=1
    fi
    if [ x$dump = xy ]; then
	export NUMAMMA_DUMP=1
    fi
    LD_PRELOAD=$ld_preload LD_LIBRARY_PATH=$ld_library_path $prog_name $*
    if [ x$create_blocks = xy ]; then
	count_dir=/tmp/counters
	if [ -f $count_dir/summary.log ]; then
	    echo "counters in $count_dir"
	    nb_nodes=4
	    rm -f $count_dir/blocks.dat 2>/dev/null
	    while read index name size other ;do
		if [ "$name" != "[stack]" ]; then
		    echo "Running counters_to_binding.py $count_dir/counters_$index.dat $nb_nodes $size >> $count_dir/blocks.dat"
		    counters_to_binding.py $count_dir/counters_$index.dat $nb_nodes $name $size >> $count_dir/blocks.dat
		fi
	    done< $count_dir/summary.log

	fi
    fi
    exit 0
fi
